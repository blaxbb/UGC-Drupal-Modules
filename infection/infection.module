<?php
/**
 * @file
 * UGC Game Module
 */

require DRUPAL_ROOT . '/' . drupal_get_path('module', 'infection') . '/infection.db.inc';
require DRUPAL_ROOT . '/' . drupal_get_path('module', 'infection') . '/infection.ui.inc';
require DRUPAL_ROOT . '/' . drupal_get_path('module', 'infection') . '/infection.field.inc';

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function infection_permission() {
  return array(
    'view oz' => array(
      'title' => t('View the hidden OZs'),
      'description' => t('Allows visiblity of hidden OZ status'),
      'restrict access' => TRUE,
    ),
    'view other killids' => array(
      'title' => t("View other users killid's"),
      'description' => t('Allows visiblity of killids'),
      'restrict access' => TRUE,
    ),
  );
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function infection_game_gametype() {
  $gametype = array(
    'title' => 'Infection',
    'id' => 'infection',
    'description' => 'Infection gametype',
    'states' => array(
      'registration closed',
      'registration open',
      "game start - OZs hidden",
      "Reveal OZ's",
    ),
  );
  return $gametype;
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function infection_get_status_string($game, $status) {
  $string = $game['gamestate']['playerStates'][$status];
  if (!user_access('view oz') && $status == 2) {
    $string = $game['gamestate']['playerStates'][0];
  }

  return $string;
}

function infection_attempt_kill($game, $killer, $killid)
{
  if ($game['gamestate']['state'] == 0) {
  //Game is not closed
    return "Registration is still closed";
  }
  
  if ($game['gamestate']['state'] == 1) {
  //Game is not closed
    return "Game has not started";
  }
  
  if ($killer['status'] == 0)
  {
    return "You are not a zombie.";
  }
  $killed = infection_get_player_from_killid($game, $killid);
  if ($killed == null)
  {
    return "Killid lookup failed"; 
  }
  
  _infection_kill_player($game, $killer, $killed);
}

function _infection_kill_player($game, $killer, $killed)
{
  drupal_set_message($killer['name'] . " killed " . $killed['name']);
  
  $killer['tags']++;
  $killed['status'] = 1;
  game_save_player($killer);
  
}

function infection_game_new_id_is_valid($game, $id)
{
  if(infection_get_player_from_killid($game, $id) != null)
    return false;
    
  return true;
}
